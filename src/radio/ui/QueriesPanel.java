package radio.ui;

import radio.service.GenreService;
import radio.service.PlaylistGenerator;
import radio.service.RadioManagerService;
import radio.model.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author funes
 */
public class QueriesPanel extends javax.swing.JPanel {
    
    private GenreService genreSvc;
    private PlaylistGenerator generator;
    private RadioManagerService svc;

    private DefaultTableModel songsByGenreModel;
    private DefaultTableModel programsSummaryModel;
    
    public void bindServices(GenreService genreSvc, PlaylistGenerator generator, RadioManagerService svc) {
        this.genreSvc = genreSvc;
        this.generator = generator;
        this.svc = svc;
        setupTables();
        fillGenreCombo();
    }
    
    private void setupTables() {
        songsByGenreModel = new DefaultTableModel(new Object[]{"Title","Min","Singer","Genre"}, 0){ @Override public boolean isCellEditable(int r,int c){ return false; } };
        programsSummaryModel = new DefaultTableModel(new Object[]{"Name","Schedule","Duration","Genre","Announcer","Has Playlist?"}, 0){ @Override public boolean isCellEditable(int r,int c){ return false; } };
        TableGenreQueries.setModel(songsByGenreModel);
        TableListProgramQueries.setModel(programsSummaryModel);
    }
    
    private void fillGenreCombo() {
        cbxQueries.removeAllItems();
        for (String g : genreSvc.listAll()) cbxQueries.addItem(g);
        if (cbxQueries.getItemCount() > 0) cbxQueries.setSelectedIndex(0);
    }
    
    private String askNewGenre() {
        String g = JOptionPane.showInputDialog(this, "New genre:");
        if (g == null || g.isBlank()) throw new IllegalArgumentException("Genre required");
        return g.trim();
    }
    
    public QueriesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAnnouncersPanel = new javax.swing.JPanel();
        lblTitleQueriesPanel = new javax.swing.JLabel();
        pnlSettingAnnouncersRadio = new javax.swing.JPanel();
        lblGenreQueries = new javax.swing.JLabel();
        btnSearchQueries = new javax.swing.JButton();
        btnClearQueries = new javax.swing.JButton();
        cbxQueries = new javax.swing.JComboBox<>();
        btnOtherQueries = new javax.swing.JButton();
        pnlSettingListProgramQueries = new javax.swing.JPanel();
        lblListProgramQueries = new javax.swing.JLabel();
        btnListProgramQueries = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableGenreQueries = new javax.swing.JTable();
        pnlListProgramQueries = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableListProgramQueries = new javax.swing.JTable();

        pnlAnnouncersPanel.setBackground(new java.awt.Color(77, 98, 91));

        lblTitleQueriesPanel.setBackground(new java.awt.Color(168, 178, 130));
        lblTitleQueriesPanel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitleQueriesPanel.setForeground(new java.awt.Color(168, 178, 130));
        lblTitleQueriesPanel.setText("Queries");

        pnlSettingAnnouncersRadio.setBackground(new java.awt.Color(245, 247, 246));
        pnlSettingAnnouncersRadio.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));

        lblGenreQueries.setForeground(new java.awt.Color(60, 63, 65));
        lblGenreQueries.setText("Genre:");

        btnSearchQueries.setBackground(new java.awt.Color(168, 178, 130));
        btnSearchQueries.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchQueries.setText("Search");
        btnSearchQueries.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearchQueries.setBorderPainted(false);
        btnSearchQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchQueriesActionPerformed(evt);
            }
        });

        btnClearQueries.setBackground(new java.awt.Color(168, 178, 130));
        btnClearQueries.setForeground(new java.awt.Color(255, 255, 255));
        btnClearQueries.setText("Clear");
        btnClearQueries.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearQueries.setBorderPainted(false);
        btnClearQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearQueriesActionPerformed(evt);
            }
        });

        cbxQueries.setBackground(new java.awt.Color(245, 247, 246));
        cbxQueries.setEditable(true);
        cbxQueries.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Música Clásica", "Blues", "Jazz", "Soul", "R&B", "Rock", "Pop", "Hip Hop", "Country", "Música Electrónica", "Reggae", "Disco", "Salsa", "Cumbia", "Bachata", "Reguetón" }));

        btnOtherQueries.setBackground(new java.awt.Color(168, 178, 130));
        btnOtherQueries.setForeground(new java.awt.Color(255, 255, 255));
        btnOtherQueries.setText("Other..");
        btnOtherQueries.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnOtherQueries.setBorderPainted(false);
        btnOtherQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtherQueriesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSettingAnnouncersRadioLayout = new javax.swing.GroupLayout(pnlSettingAnnouncersRadio);
        pnlSettingAnnouncersRadio.setLayout(pnlSettingAnnouncersRadioLayout);
        pnlSettingAnnouncersRadioLayout.setHorizontalGroup(
            pnlSettingAnnouncersRadioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingAnnouncersRadioLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblGenreQueries)
                .addGap(18, 18, 18)
                .addComponent(cbxQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOtherQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 266, Short.MAX_VALUE)
                .addComponent(btnSearchQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClearQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        pnlSettingAnnouncersRadioLayout.setVerticalGroup(
            pnlSettingAnnouncersRadioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingAnnouncersRadioLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlSettingAnnouncersRadioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSettingAnnouncersRadioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnOtherQueries)
                        .addComponent(cbxQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSettingAnnouncersRadioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGenreQueries)
                        .addComponent(btnSearchQueries)
                        .addComponent(btnClearQueries)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pnlSettingListProgramQueries.setBackground(new java.awt.Color(245, 247, 246));
        pnlSettingListProgramQueries.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));

        lblListProgramQueries.setForeground(new java.awt.Color(60, 63, 65));
        lblListProgramQueries.setText("List Program");

        btnListProgramQueries.setBackground(new java.awt.Color(168, 178, 130));
        btnListProgramQueries.setForeground(new java.awt.Color(255, 255, 255));
        btnListProgramQueries.setText("List Program");
        btnListProgramQueries.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnListProgramQueries.setBorderPainted(false);
        btnListProgramQueries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListProgramQueriesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSettingListProgramQueriesLayout = new javax.swing.GroupLayout(pnlSettingListProgramQueries);
        pnlSettingListProgramQueries.setLayout(pnlSettingListProgramQueriesLayout);
        pnlSettingListProgramQueriesLayout.setHorizontalGroup(
            pnlSettingListProgramQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingListProgramQueriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblListProgramQueries)
                .addGap(18, 18, 18)
                .addComponent(btnListProgramQueries, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSettingListProgramQueriesLayout.setVerticalGroup(
            pnlSettingListProgramQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingListProgramQueriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSettingListProgramQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblListProgramQueries)
                    .addComponent(btnListProgramQueries))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(245, 247, 246));

        TableGenreQueries.setBackground(new java.awt.Color(245, 247, 246));
        TableGenreQueries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Min", "Singer", "Genre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableGenreQueries);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        pnlListProgramQueries.setBackground(new java.awt.Color(245, 247, 246));

        TableListProgramQueries.setBackground(new java.awt.Color(245, 247, 246));
        TableListProgramQueries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Duration", "Genre", "Announcer", "Has PlayList?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TableListProgramQueries);

        javax.swing.GroupLayout pnlListProgramQueriesLayout = new javax.swing.GroupLayout(pnlListProgramQueries);
        pnlListProgramQueries.setLayout(pnlListProgramQueriesLayout);
        pnlListProgramQueriesLayout.setHorizontalGroup(
            pnlListProgramQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlListProgramQueriesLayout.setVerticalGroup(
            pnlListProgramQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlAnnouncersPanelLayout = new javax.swing.GroupLayout(pnlAnnouncersPanel);
        pnlAnnouncersPanel.setLayout(pnlAnnouncersPanelLayout);
        pnlAnnouncersPanelLayout.setHorizontalGroup(
            pnlAnnouncersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnnouncersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnnouncersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSettingAnnouncersRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSettingListProgramQueries, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAnnouncersPanelLayout.createSequentialGroup()
                        .addComponent(lblTitleQueriesPanel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListProgramQueries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlAnnouncersPanelLayout.setVerticalGroup(
            pnlAnnouncersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnnouncersPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitleQueriesPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingAnnouncersRadio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingListProgramQueries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListProgramQueries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAnnouncersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAnnouncersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchQueriesActionPerformed
        try {
            if (svc == null || genreSvc == null) {
                JOptionPane.showMessageDialog(this, "Services not bound. Open panel from the main menu.");
                return;
            }
            Object sel = cbxQueries.getSelectedItem();
            if (sel == null) return;

            String genre = sel.toString();
            if ("OTHER".equalsIgnoreCase(genre)) {
                genre = genreSvc.ensure(askNewGenre());
                fillGenreCombo();
                cbxQueries.setSelectedItem(genre);
            } else {
                genre = genreSvc.ensure(genre); // normaliza/asegura existencia
            }

            var list = svc.listSongsByGenre(genre);
            songsByGenreModel.setRowCount(0);
            for (Song s : list) {
                songsByGenreModel.addRow(new Object[]{
                    s.getTitle(), s.getDurationMinutes(), s.getSinger(), s.getGenre()
                });
            }
            if (list.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No songs found for: " + genre);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchQueriesActionPerformed

    private void btnClearQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearQueriesActionPerformed
        songsByGenreModel.setRowCount(0);
        programsSummaryModel.setRowCount(0);
        if (cbxQueries.getItemCount() > 0) cbxQueries.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearQueriesActionPerformed

    private void btnListProgramQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListProgramQueriesActionPerformed
        try {
            if (svc == null) {
                JOptionPane.showMessageDialog(this, "Services not bound. Open panel from the main menu.");
                return;
            }
            programsSummaryModel.setRowCount(0);
            for (Program p : svc.listPrograms()) {
                programsSummaryModel.addRow(new Object[]{
                    p.getName(),
                    p.getSchedule(),
                    p.getDurationMinutes(),
                    p.getGenre(),
                    p.getAnnouncer().getFullName(),
                    (p.getPlaylist() != null ? "Yes" : "No")
                });
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnListProgramQueriesActionPerformed

    private void btnOtherQueriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtherQueriesActionPerformed
        try {
            String ensured = genreSvc.ensure(askNewGenre());
            fillGenreCombo(); cbxQueries.setSelectedItem(ensured);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnOtherQueriesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableGenreQueries;
    private javax.swing.JTable TableListProgramQueries;
    private javax.swing.JButton btnClearQueries;
    private javax.swing.JButton btnListProgramQueries;
    private javax.swing.JButton btnOtherQueries;
    private javax.swing.JButton btnSearchQueries;
    private javax.swing.JComboBox<String> cbxQueries;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblGenreQueries;
    private javax.swing.JLabel lblListProgramQueries;
    private javax.swing.JLabel lblTitleQueriesPanel;
    private javax.swing.JPanel pnlAnnouncersPanel;
    private javax.swing.JPanel pnlListProgramQueries;
    private javax.swing.JPanel pnlSettingAnnouncersRadio;
    private javax.swing.JPanel pnlSettingListProgramQueries;
    // End of variables declaration//GEN-END:variables
}
