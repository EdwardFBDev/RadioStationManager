package radio.ui;

import radio.service.GenreService;
import radio.service.PlaylistGenerator;
import radio.service.RadioManagerService;
import radio.model.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author funes
 */
public class PlaylistPanel extends javax.swing.JPanel {
    private GenreService genreSvc;
    private PlaylistGenerator generator;
    private RadioManagerService svc;

    private DefaultTableModel playlistModel;
    
    public void bindServices(GenreService genreSvc, PlaylistGenerator generator, RadioManagerService svc) {
        this.genreSvc = genreSvc;
        this.generator = generator;
        this.svc = svc;

        setupPlaylistTable();
        lockReadOnlyFields();

        // Enter genera la playlist si ya hay root pane
        if (getRootPane() != null) {
        getRootPane().setDefaultButton(btnGeneratePlaylist);
    }
    }
    
    // === Helpers ===
    private static String req(String v, String field) {
        if (v == null || v.trim().isEmpty()) throw new IllegalArgumentException(field + " is required");
        return v.trim();
    }

    /** Los campos de duración/total son informativos: hacerlos no editables. */
    private void lockReadOnlyFields() {
        txfBoxProgramDurationPlaylist.setEditable(false);
        txfBoxTotalTimePlaylist.setEditable(false);
    }

    
    private void setupPlaylistTable() {
        playlistModel = new DefaultTableModel(new Object[]{"#","Title","Singer","Genre","Min"}, 0){
             @Override public boolean isCellEditable(int r,int c){ return false; }
        };
        TableBoxPlaylist.setModel(playlistModel);
    }
    
    private Program findProgramByName(String name) {
        String q = name == null ? "" : name.trim();
        for (Program p : svc.listPrograms()) if (p.getName().equalsIgnoreCase(q)) return p;
        return null;
    }
    
    private void fillPlaylist(Playlist pl) {
        playlistModel.setRowCount(0);
        if (pl == null) return;

        int i = 1;
        int total = 0;
        for (Song s : pl.getSongs()) {
            playlistModel.addRow(new Object[]{ i++, s.getTitle(), s.getSinger(), s.getGenre(), s.getDurationMinutes() });
            total += s.getDurationMinutes();
        }
        txfBoxTotalTimePlaylist.setText(String.valueOf(total));

        // Si el campo de duración del programa ya se mostró, validamos la condición del enunciado
        String progDurTxt = txfBoxProgramDurationPlaylist.getText();
        if (progDurTxt != null && !progDurTxt.isBlank()) {
            try {
                int progDur = Integer.parseInt(progDurTxt.trim());
                if (total >= progDur) {
                    JOptionPane.showMessageDialog(this,
                        "Warning: playlist total (" + total + " min) must be STRICTLY LESS than program duration (" + progDur + " min).",
                        "Validation", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException ignore) { /* campo no numérico, lo ignoro */ }
        }
        
    }
    
    
    
    
    
    
    public PlaylistPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlProgramsPanel = new javax.swing.JPanel();
        lblTitlePlaylistPanel = new javax.swing.JLabel();
        pnlSettingProgrmas = new javax.swing.JPanel();
        lblProgramPlaylist = new javax.swing.JLabel();
        lblProgramDurationPlayliest = new javax.swing.JLabel();
        txfBoxProgramPlaylist = new javax.swing.JTextField();
        txfBoxProgramDurationPlaylist = new javax.swing.JTextField();
        btnGeneratePlaylist = new javax.swing.JButton();
        btnClearPlaylist = new javax.swing.JButton();
        lblTotalTimePlaylist = new javax.swing.JLabel();
        txfBoxTotalTimePlaylist = new javax.swing.JTextField();
        pnlTablePlaylist = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableBoxPlaylist = new javax.swing.JTable();

        pnlProgramsPanel.setBackground(new java.awt.Color(77, 98, 91));

        lblTitlePlaylistPanel.setBackground(new java.awt.Color(168, 178, 130));
        lblTitlePlaylistPanel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitlePlaylistPanel.setForeground(new java.awt.Color(168, 178, 130));
        lblTitlePlaylistPanel.setText("Playlist");

        pnlSettingProgrmas.setBackground(new java.awt.Color(245, 247, 246));
        pnlSettingProgrmas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 2, 1, new java.awt.Color(0, 0, 0)));

        lblProgramPlaylist.setForeground(new java.awt.Color(60, 63, 65));
        lblProgramPlaylist.setText("Program:");

        lblProgramDurationPlayliest.setForeground(new java.awt.Color(60, 63, 65));
        lblProgramDurationPlayliest.setText("Program Duration: (min)");

        txfBoxProgramPlaylist.setBackground(new java.awt.Color(245, 247, 246));
        txfBoxProgramPlaylist.setText("Name...");
        txfBoxProgramPlaylist.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 0, new java.awt.Color(204, 204, 204)));
        txfBoxProgramPlaylist.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txfBoxProgramPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBoxProgramPlaylistActionPerformed(evt);
            }
        });

        txfBoxProgramDurationPlaylist.setBackground(new java.awt.Color(245, 247, 246));
        txfBoxProgramDurationPlaylist.setText("min");
        txfBoxProgramDurationPlaylist.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 0, new java.awt.Color(204, 204, 204)));
        txfBoxProgramDurationPlaylist.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txfBoxProgramDurationPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBoxProgramDurationPlaylistActionPerformed(evt);
            }
        });

        btnGeneratePlaylist.setBackground(new java.awt.Color(168, 178, 130));
        btnGeneratePlaylist.setForeground(new java.awt.Color(255, 255, 255));
        btnGeneratePlaylist.setText("Generate");
        btnGeneratePlaylist.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGeneratePlaylist.setBorderPainted(false);
        btnGeneratePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePlaylistActionPerformed(evt);
            }
        });

        btnClearPlaylist.setBackground(new java.awt.Color(168, 178, 130));
        btnClearPlaylist.setForeground(new java.awt.Color(255, 255, 255));
        btnClearPlaylist.setText("Clear");
        btnClearPlaylist.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearPlaylist.setBorderPainted(false);
        btnClearPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPlaylistActionPerformed(evt);
            }
        });

        lblTotalTimePlaylist.setForeground(new java.awt.Color(60, 63, 65));
        lblTotalTimePlaylist.setText("Total (min)");

        txfBoxTotalTimePlaylist.setBackground(new java.awt.Color(245, 247, 246));
        txfBoxTotalTimePlaylist.setText("min");
        txfBoxTotalTimePlaylist.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 0, new java.awt.Color(204, 204, 204)));
        txfBoxTotalTimePlaylist.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txfBoxTotalTimePlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfBoxTotalTimePlaylistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSettingProgrmasLayout = new javax.swing.GroupLayout(pnlSettingProgrmas);
        pnlSettingProgrmas.setLayout(pnlSettingProgrmasLayout);
        pnlSettingProgrmasLayout.setHorizontalGroup(
            pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSettingProgrmasLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSettingProgrmasLayout.createSequentialGroup()
                        .addComponent(lblProgramPlaylist)
                        .addGap(18, 18, 18)
                        .addComponent(txfBoxProgramPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSettingProgrmasLayout.createSequentialGroup()
                        .addComponent(lblTotalTimePlaylist)
                        .addGap(18, 18, 18)
                        .addComponent(txfBoxTotalTimePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(99, 99, 99)
                .addComponent(lblProgramDurationPlayliest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txfBoxProgramDurationPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGeneratePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        pnlSettingProgrmasLayout.setVerticalGroup(
            pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingProgrmasLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProgramPlaylist)
                    .addComponent(txfBoxProgramPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGeneratePlaylist)
                    .addComponent(lblProgramDurationPlayliest)
                    .addComponent(txfBoxProgramDurationPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSettingProgrmasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTotalTimePlaylist)
                        .addComponent(txfBoxTotalTimePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearPlaylist))
                .addContainerGap())
        );

        pnlTablePlaylist.setBackground(new java.awt.Color(245, 247, 246));
        pnlTablePlaylist.setBorder(new javax.swing.border.MatteBorder(null));

        TableBoxPlaylist.setBackground(new java.awt.Color(245, 247, 246));
        TableBoxPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Schedule", "Duration", "Genre", "Announcer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableBoxPlaylist.setFocusable(false);
        TableBoxPlaylist.setIntercellSpacing(new java.awt.Dimension(0, 0));
        TableBoxPlaylist.setSelectionBackground(new java.awt.Color(245, 247, 246));
        TableBoxPlaylist.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TableBoxPlaylist);

        javax.swing.GroupLayout pnlTablePlaylistLayout = new javax.swing.GroupLayout(pnlTablePlaylist);
        pnlTablePlaylist.setLayout(pnlTablePlaylistLayout);
        pnlTablePlaylistLayout.setHorizontalGroup(
            pnlTablePlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnlTablePlaylistLayout.setVerticalGroup(
            pnlTablePlaylistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlProgramsPanelLayout = new javax.swing.GroupLayout(pnlProgramsPanel);
        pnlProgramsPanel.setLayout(pnlProgramsPanelLayout);
        pnlProgramsPanelLayout.setHorizontalGroup(
            pnlProgramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProgramsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProgramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlProgramsPanelLayout.createSequentialGroup()
                        .addComponent(lblTitlePlaylistPanel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlProgramsPanelLayout.createSequentialGroup()
                        .addGroup(pnlProgramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlSettingProgrmas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlTablePlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        pnlProgramsPanelLayout.setVerticalGroup(
            pnlProgramsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProgramsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitlePlaylistPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingProgrmas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTablePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlProgramsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlProgramsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txfBoxProgramPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBoxProgramPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfBoxProgramPlaylistActionPerformed

    private void txfBoxProgramDurationPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBoxProgramDurationPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfBoxProgramDurationPlaylistActionPerformed

    private void btnGeneratePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePlaylistActionPerformed
        try {
            if (svc == null) {
                JOptionPane.showMessageDialog(this, "Services not bound. Open panel from the main menu.");
                return;
            }

            String progName = req(txfBoxProgramPlaylist.getText(), "Program name");
            Program p = findProgramByName(progName);
            if (p == null) {
                JOptionPane.showMessageDialog(this, "Program not found (check the name)");
                return;
            }

            // Genera y asigna (el servicio debe respetar 'suma < duración')
            Playlist pl = svc.generateAndAssignPlaylist(p);

            // Llenar tabla + campos
            fillPlaylist(pl);
            txfBoxProgramDurationPlaylist.setText(String.valueOf(p.getDurationMinutes()));

            JOptionPane.showMessageDialog(this, "Playlist generated");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGeneratePlaylistActionPerformed

    private void btnClearPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPlaylistActionPerformed
        playlistModel.setRowCount(0);
        txfBoxProgramPlaylist.setText("");
        txfBoxProgramDurationPlaylist.setText("");
        txfBoxTotalTimePlaylist.setText("");
    }//GEN-LAST:event_btnClearPlaylistActionPerformed

    private void txfBoxTotalTimePlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfBoxTotalTimePlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfBoxTotalTimePlaylistActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableBoxPlaylist;
    private javax.swing.JButton btnClearPlaylist;
    private javax.swing.JButton btnGeneratePlaylist;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProgramDurationPlayliest;
    private javax.swing.JLabel lblProgramPlaylist;
    private javax.swing.JLabel lblTitlePlaylistPanel;
    private javax.swing.JLabel lblTotalTimePlaylist;
    private javax.swing.JPanel pnlProgramsPanel;
    private javax.swing.JPanel pnlSettingProgrmas;
    private javax.swing.JPanel pnlTablePlaylist;
    private javax.swing.JTextField txfBoxProgramDurationPlaylist;
    private javax.swing.JTextField txfBoxProgramPlaylist;
    private javax.swing.JTextField txfBoxTotalTimePlaylist;
    // End of variables declaration//GEN-END:variables
}
